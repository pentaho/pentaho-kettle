<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.pentaho.di.plugins</groupId>
    <artifactId>pentaho-reporting-assemblies</artifactId>
    <version>10.2.0.0-SNAPSHOT</version>
  </parent>

  <artifactId>pentaho-reporting-plugins</artifactId>
  <version>10.2.0.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>PDI Pentaho Reporting Plugins Distribution</name>
  <description></description>

  <properties>
    <pentaho-reporting.version>10.2.0.0-SNAPSHOT</pentaho-reporting.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.pentaho.di.plugins</groupId>
      <artifactId>pentaho-reporting-plugins-impl</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.pentaho.di.plugins</groupId>
      <artifactId>pentaho-reporting-plugins-ui</artifactId>
      <version>${project.version}</version>
    </dependency>
    <!-- Reporting dependencies -->
    <dependency>
      <groupId>org.pentaho.reporting.library</groupId>
      <artifactId>libfonts</artifactId>
      <version>${pentaho-reporting.version}</version>
    </dependency>
    <dependency>
      <groupId>org.pentaho.reporting.engine</groupId>
      <artifactId>classic-core</artifactId>
      <version>${pentaho-reporting.version}</version>
    </dependency>
    <dependency>
      <groupId>org.pentaho.reporting.engine</groupId>
      <artifactId>classic-extensions</artifactId>
      <version>${pentaho-reporting.version}</version>
    </dependency>
    <dependency>
      <groupId>org.pentaho.reporting.engine</groupId>
      <artifactId>classic-extensions-drill-down</artifactId>
      <version>${pentaho-reporting.version}</version>
    </dependency>
    <dependency>
      <groupId>org.pentaho.reporting.engine</groupId>
      <artifactId>classic-extensions-scripting</artifactId>
      <version>${pentaho-reporting.version}</version>
    </dependency>
    <dependency>
      <groupId>org.pentaho.reporting.engine</groupId>
      <artifactId>classic-extensions-toc</artifactId>
      <version>${pentaho-reporting.version}</version>
    </dependency>
    <dependency>
      <groupId>org.pentaho.reporting.engine</groupId>
      <artifactId>classic-extensions-xpath</artifactId>
      <version>${pentaho-reporting.version}</version>
    </dependency>
    <dependency>
      <groupId>org.pentaho.reporting.engine</groupId>
      <artifactId>classic-extensions-kettle</artifactId>
      <version>${pentaho-reporting.version}</version>
    </dependency>
    <dependency>
      <groupId>org.pentaho.reporting.engine</groupId>
      <artifactId>classic-extensions-mondrian</artifactId>
      <version>${pentaho-reporting.version}</version>
    </dependency>
    <dependency>
      <groupId>org.pentaho.reporting.engine</groupId>
      <artifactId>classic-extensions-olap4j</artifactId>
      <version>${pentaho-reporting.version}</version>
    </dependency>
    <dependency>
      <groupId>org.pentaho.reporting.engine</groupId>
      <artifactId>classic-extensions-pmd</artifactId>
      <version>${pentaho-reporting.version}</version>
    </dependency>
    <dependency>
      <groupId>org.pentaho.reporting.engine</groupId>
      <artifactId>classic-extensions-reportdesigner-parser</artifactId>
      <version>${pentaho-reporting.version}</version>
    </dependency>
    <dependency>
      <groupId>org.pentaho.reporting.engine</groupId>
      <artifactId>classic-extensions-sampledata</artifactId>
      <version>${pentaho-reporting.version}</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>add-libs</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/assembly/lib</outputDirectory>
              <includeScope>compile</includeScope>
              <includeArtifactIds>
                actionsequence-dom,
                avalon-framework,
                axis2-adb,
                axis2-kernel,
                barbecue,
                barcode4j,
                batik-gui-util,
                bcmail-jdk14,
                bsf,
                bsh,
                classic-core,
                classic-extensions,
                classic-extensions-drill-down,
                classic-extensions-kettle,
                classic-extensions-mondrian,
                classic-extensions-olap4j,
                classic-extensions-pmd,
                classic-extensions-reportdesigner-parser,
                classic-extensions-sampledata,
                classic-extensions-scripting,
                classic-extensions-toc,
                classic-extensions-xpath,
                commons-database-model,
                commons-digester,
                commons-lang3,
                commons-xul-core,
                ehcache-core,
                flute,
                groovy-all,
                openpdf,
                openrtf,
                jackcess,
                legacy-charts,
                libbase,
                libdocbundle,
                libfonts,
                libformat,
                libformula,
                libloader,
                libpixie,
                librepository,
                libserializer,
                libsparkline,
                libswing,
                libxml,
                poi,
                poi-ooxml,
                poi-ooxml-full,
                reactive-streams,
                rsyntaxtextarea,
                sac,
                wstx-asl
              </includeArtifactIds>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
