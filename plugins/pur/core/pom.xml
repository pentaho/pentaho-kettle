<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>pdi-pur-plugin-core</artifactId>
  <packaging>jar</packaging>
  <version>10.3.0.0-SNAPSHOT</version>

  <name>PDI PUR Plugin Core</name>

  <parent>
    <groupId>org.pentaho.di.plugins</groupId>
    <artifactId>pur</artifactId>
    <version>10.3.0.0-SNAPSHOT</version>
  </parent>

  <properties>
    <maven-surefire-plugin.reuseForks>false</maven-surefire-plugin.reuseForks>

    <!-- Kettle dependencies -->
    <pdi.version>10.3.0.0-SNAPSHOT</pdi.version>

    <!-- Pentaho dependenceis -->
    <platform.version>10.3.0.0-SNAPSHOT</platform.version>
    <pentaho-json.version>10.3.0.0-SNAPSHOT</pentaho-json.version>

    <!-- Third party dependencies -->
    <webservices-api.version>2.3.1</webservices-api.version>
    <webservices-rt.version>2.3.1</webservices-rt.version>
    <servlet-api.version>2.5</servlet-api.version>
    <encoder.version>1.2</encoder.version>
    <jersey-media-multipart.version>2.44</jersey-media-multipart.version>
    <javax.ws.rs-api.version>2.0</javax.ws.rs-api.version>
    <jersey2.version>2.44</jersey2.version>
    <enunciate-core-annotations.version>1.28</enunciate-core-annotations.version>
    <wadl-core.version>1.1.6</wadl-core.version>
    <wadl-ant.version>1.1.6</wadl-ant.version>

    <!-- Test dependencies -->
    <se-jcr.version>0.9</se-jcr.version>
    <jcr.version>2.0</jcr.version>

    <!-- Wadl2Java Settings -->
    <wadl2java.generated-class-name>Localhost_PentahoPlugin</wadl2java.generated-class-name>
    <wadl2java.desired-class-name>PentahoDiPlugin</wadl2java.desired-class-name>
    <wadl2java.codedir>src/main/java/com/pentaho/di/services</wadl2java.codedir>
    <wadl2java.target-package>com.pentaho.di.services</wadl2java.target-package>
  </properties>

  <dependencies>
    <dependency>
      <groupId>pentaho-kettle</groupId>
      <artifactId>kettle-core</artifactId>
      <version>${pdi.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>pentaho-kettle</groupId>
      <artifactId>kettle-engine</artifactId>
      <version>${pdi.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>pentaho-kettle</groupId>
      <artifactId>kettle-ui-swt</artifactId>
      <version>${pdi.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- Pentaho dependencies -->
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>commons-xul-core</artifactId>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>com.ibm.icu</groupId>
          <artifactId>icu4j</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>commons-xul-swt</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>metastore</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-platform-core</artifactId>
      <version>${platform.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-platform-api</artifactId>
      <version>${platform.version}</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-platform-repository</artifactId>
      <version>${platform.version}</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-platform-extensions</artifactId>
      <version>${platform.version}</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>json</artifactId>
      <version>${pentaho-json.version}</version>
      <scope>compile</scope>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Third-party dependencies -->
    <dependency>
      <groupId>org.eclipse.swt</groupId>
      <artifactId>org.eclipse.swt.gtk.linux.x86_64</artifactId>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.ws.rs</groupId>
      <artifactId>javax.ws.rs-api</artifactId>
      <version>${javax.ws.rs-api.version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.core</groupId>
      <artifactId>jersey-client</artifactId>
      <version>${jersey2.version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-json-jackson</artifactId>
      <version>${jersey2.version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.inject</groupId>
      <artifactId>jersey-hk2</artifactId>
      <version>${jersey2.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j2-impl</artifactId>
      <version>${log4j.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.glassfish.metro</groupId>
      <artifactId>webservices-api</artifactId>
      <version>${webservices-api.version}</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.glassfish.metro</groupId>
      <artifactId>webservices-rt</artifactId>
      <version>${webservices-rt.version}</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>${servlet-api.version}</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-multipart</artifactId>
      <version>${jersey-media-multipart.version}</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.owasp.encoder</groupId>
      <artifactId>encoder</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.enunciate</groupId>
      <artifactId>enunciate-core-annotations</artifactId>
      <version>${enunciate-core-annotations.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-servlet</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
    </dependency>

    <!-- Test dependencies -->
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>java-hamcrest</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>pentaho-kettle</groupId>
      <artifactId>kettle-engine</artifactId>
      <version>${pdi.version}</version>
      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>pentaho-kettle</groupId>
      <artifactId>kettle-core</artifactId>
      <version>${pdi.version}</version>
      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>se-jcr</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.webflow</groupId>
      <artifactId>spring-binding</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>ognl</artifactId>
          <groupId>opensymphony</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-config</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>javax.jcr</groupId>
      <artifactId>jcr</artifactId>
      <version>${jcr.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-platform-repository</artifactId>
      <version>${platform.version}</version>
      <classifier>tests</classifier>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-platform-core</artifactId>
      <version>${platform.version}</version>
      <classifier>tests</classifier>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.jackrabbit</groupId>
      <artifactId>oak-jackrabbit-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.jackrabbit</groupId>
      <artifactId>jackrabbit-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>osgi.core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>wadl2java</id>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <echo message="Compiling the Wadl description..."/>
                <taskdef name="wjc" classname="org.jvnet.ws.wadl2java.WJCTask" classpathref="maven.plugin.classpath"/>

                <wjc description="wadl2java/wadl-resource/application.wadl.xml"
                     package="com.pentaho.di.services"
                     autoSchemaPackage="false"
                     target="src/main/java">

                  <produces dir="src/main/java" includes="**/*.java"/>
                  <customClassName uri="http://localhost:9080/pentaho-di/plugin/"
                                   classname="PurRepositoryPluginServices"/>
                </wjc>

                <!-- Modify the resulting class adding our tagging interface -->
                <replaceregexp file="${wadl2java.codedir}/${wadl2java.generated-class-name}.java"
                               match="package com.pentaho.di.services;${line.separator}"
                               replace="package com.pentaho.di.services;${line.separator}${line.separator}import org.pentaho.di.repository.IRepositoryService;"/>

                <replaceregexp file="${wadl2java.codedir}/${wadl2java.generated-class-name}.java"
                               match="public static class (.*) \{"
                               replace="public static class \1 implements IRepositoryService {"
                               byline="true"/>

                <replaceregexp file="${wadl2java.codedir}/${wadl2java.generated-class-name}.java"
                               match="${wadl2java.generated-class-name}"
                               replace="${wadl2java.desired-class-name}"
                               byline="true"/>

                <!-- Finally rename the file and overwrite the original -->
                <move file="${wadl2java.codedir}/${wadl2java.generated-class-name}.java"
                      tofile="${wadl2java.codedir}/${wadl2java.desired-class-name}.java"/>
              </target>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.jvnet.ws.wadl</groupId>
            <artifactId>wadl-core</artifactId>
            <version>${wadl-core.version}</version>
          </dependency>
          <dependency>
            <groupId>org.jvnet.ws.wadl</groupId>
            <artifactId>wadl-ant</artifactId>
            <version>${wadl-ant.version}</version>
            <exclusions>
              <exclusion>
                <groupId>ant</groupId>
                <artifactId>ant</artifactId>
              </exclusion>
            </exclusions>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
  </build>
</project>
